{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\GIT-SDGP\\\\SDGP\\\\frontend-implementation\\\\src\\\\components\\\\ServiceText.js\";\nimport React from \"react\";\nimport Typewriter from \"typewriter-effect\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Title = styled.h2`\n  font-size: ${props => props.theme.fontxxl};\n  text-transformation: capitalize;\n  width: 80%;\n  color: ${props => props.theme.text};\n  align-self: flex-start;\n\n  span {\n    text-transform: capitalize;\n    font-family: \"Akaya Telivigala\";\n  }\n\n  .text-1 {\n    color: #EAC42D;\n  }\n\n  @media (max-width: 70em) {\n    font-size: ${props => props.theme.fontxl};\n  }\n\n  @media (max-width: 48em) {\n    align-self: center;\n    text-align: center;\n    font-size: ${props => props.theme.fontxl};\n  }\n\n  @media (max-width: 40em) {\n    width: 90%;\n  }\n`;\n_c = Title;\nconst ServiceText = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Title, {\n      children: [/*#__PURE__*/_jsxDEV(Typewriter, {\n        options: {\n          autoStart: true,\n          loop: true\n        },\n        onInit: typewriter => {\n          typewriter.typeString(\"<span class='text-1'>Hi there, </span>\").pauseFor(2000).deleteAll().start();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \"What service would you like to have\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = ServiceText;\nexport default ServiceText;\nvar _c, _c2;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"ServiceText\");","map":{"version":3,"names":["React","Typewriter","styled","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","h2","props","theme","fontxxl","text","fontxl","_c","ServiceText","children","options","autoStart","loop","onInit","typewriter","typeString","pauseFor","deleteAll","start","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/GIT-SDGP/SDGP/frontend-implementation/src/components/ServiceText.js"],"sourcesContent":["import React from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst Title = styled.h2`\r\n  font-size: ${(props) => props.theme.fontxxl};\r\n  text-transformation: capitalize;\r\n  width: 80%;\r\n  color: ${(props) => props.theme.text};\r\n  align-self: flex-start;\r\n\r\n  span {\r\n    text-transform: capitalize;\r\n    font-family: \"Akaya Telivigala\";\r\n  }\r\n\r\n  .text-1 {\r\n    color: #EAC42D;\r\n  }\r\n\r\n  @media (max-width: 70em) {\r\n    font-size: ${(props) => props.theme.fontxl};\r\n  }\r\n\r\n  @media (max-width: 48em) {\r\n    align-self: center;\r\n    text-align: center;\r\n    font-size: ${(props) => props.theme.fontxl};\r\n  }\r\n\r\n  @media (max-width: 40em) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\n\r\nconst ServiceText = () => {\r\n  return (\r\n    <>\r\n      <Title>\r\n        <Typewriter\r\n          options={{\r\n            autoStart: true,\r\n            loop: true,\r\n          }}\r\n          onInit={(typewriter) => {\r\n            typewriter\r\n              .typeString(\"<span class='text-1'>Hi there, </span>\")\r\n              .pauseFor(2000)\r\n              .deleteAll()\r\n              .start();\r\n          }}\r\n        />\r\n        What service would you like to have\r\n      </Title>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceText;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,KAAK,GAAGN,MAAM,CAACO,EAAE;AACvB,eAAgBC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,OAAO;AAC7C;AACA;AACA,WAAYF,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,IAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAkBH,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACG,MAAM;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAkBJ,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACG,MAAM;AAC9C;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GA7BIP,KAAK;AAgCX,MAAMQ,WAAW,GAAGA,CAAA,KAAM;EACxB,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA,CAACG,KAAK;MAAAS,QAAA,gBACJZ,OAAA,CAACJ,UAAU;QACTiB,OAAO,EAAE;UACPC,SAAS,EAAE,IAAI;UACfC,IAAI,EAAE;QACR,CAAE;QACFC,MAAM,EAAGC,UAAU,IAAK;UACtBA,UAAU,CACPC,UAAU,CAAC,wCAAwC,CAAC,CACpDC,QAAQ,CAAC,IAAI,CAAC,CACdC,SAAS,CAAC,CAAC,CACXC,KAAK,CAAC,CAAC;QACZ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,uCAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC,gBACR,CAAC;AAEP,CAAC;AAACC,GAAA,GArBIf,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}